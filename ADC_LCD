#include "main.h"
#include "lcd.h"
#include <stdio.h>

ADC_HandleTypeDef hadc1;
uint16_t adc_value;
char buffer[16];

// Function Prototypes
void SystemClock_Config(void);
static void MX_GPIO_Init(void);
static void MX_ADC1_Init(void);

int main(void)
{
    // Initialize the HAL Library
    HAL_Init();
    SystemClock_Config();

    // Initialize GPIO for LCD and ADC
    MX_GPIO_Init();
    MX_ADC1_Init();

    // Initialize the LCD
    LCD_Init();
    LCD_Send_Command(0x80);   // Move to the first line of LCD

    while (1)
    {
        // Start ADC Conversion
        HAL_ADC_Start(&hadc1);
        HAL_ADC_PollForConversion(&hadc1, HAL_MAX_DELAY);    // Wait for ADC conversion to complete
        adc_value = HAL_ADC_GetValue(&hadc1);                // Get the ADC value

        // Convert ADC value to a string for display on LCD
        sprintf(buffer, "ADC: %hu", adc_value);              // Display value on LCD
        
        LCD_Send_Command(0x80);                             // Move to the first line
        LCD_Send_String(buffer);                            // Send string to LCD

        HAL_Delay(500);                                     // Delay for 500 ms before next reading
    }
}

// ADC1 initialization function
static void MX_ADC1_Init(void)
{
    ADC_ChannelConfTypeDef sConfig = {0};

    __HAL_RCC_ADC1_CLK_ENABLE();  // Enable ADC1 clock

    hadc1.Instance = ADC1;
    hadc1.Init.Resolution = ADC_RESOLUTION_12B;  // Set resolution to 12 bits
    hadc1.Init.ScanConvMode = ADC_SCAN_DISABLE;  // Single-channel mode
    hadc1.Init.ContinuousConvMode = DISABLE;     // Single conversion mode
    hadc1.Init.DiscontinuousConvMode = DISABLE;
    hadc1.Init.NbrOfDiscConversion = 0;
    hadc1.Init.ExternalTrigConv = ADC_EXTERNALTRIGCONV_T1_CC1; // Trigger mode
    hadc1.Init.DataAlign = ADC_DATAALIGN_RIGHT;
    hadc1.Init.NbrOfConversion = 1;  // 1 conversion per cycle
    HAL_ADC_Init(&hadc1);

    sConfig.Channel = ADC_CHANNEL_0;  // Select ADC channel (PA0)
    sConfig.Rank = ADC_REGULAR_RANK_1;
    sConfig.SamplingTime = ADC_SAMPLETIME_3CYCLES;  // Sampling time
    HAL_ADC_ConfigChannel(&hadc1, &sConfig);
}

// GPIO Initialization
static void MX_GPIO_Init(void)
{
    GPIO_InitTypeDef GPIO_InitStruct = {0};

    __HAL_RCC_GPIOA_CLK_ENABLE();  // Enable GPIOA clock for LCD and ADC

    // Initialize GPIO pins for LCD (RS, EN, D4-D7)
    GPIO_InitStruct.Pin = GPIO_PIN_1 | GPIO_PIN_2 | GPIO_PIN_3 | GPIO_PIN_4 | GPIO_PIN_5 | GPIO_PIN_6;
    GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
    GPIO_InitStruct.Pull = GPIO_NOPULL;
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
}
